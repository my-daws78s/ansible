- name: command vs shell module
  hosts:  localhost
  tasks:
  - name: command module
    ansible.builtin.command:  "echo 'This is from command module' > /tmp/command.txt"
  - name: shell module
    ansible.builtin.shell:  "echo 'This is from shell module' > /tmp/shell.txt"    

# [ ec2-user@ip-172-31-27-147 ~/ansible ]$ ansible-playbook 18-command-vs-shell.yaml
# [WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match 'all'

# PLAY [command vs shell module] *******************************************************************************************************

# TASK [Gathering Facts] ***************************************************************************************************************
# ok: [localhost]

# TASK [command module] ****************************************************************************************************************
# changed: [localhost]

# TASK [shell module] ******************************************************************************************************************
# changed: [localhost]

#////////////////////////////////////////////////////////////////////////////////
#Now go and check under /tmp and u will find only shell.txt created:

# [ ec2-user@ip-172-31-27-147 /tmp ]$ cat shell.txt
# This is from shell module

#////////////////////////////////////////////////////////////////////////////////
#Conclusion:

# simple commands without the need of shell variables, envrironment and features like redirections, pipes, & go for command module. 
# If we need to run complex commands or scripts go for shell module.
# Whatever works in command module, it will work in shell module, but vice versa is not true.